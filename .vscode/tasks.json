{
    "version": "2.0.0",
    "tasks": [
        {
            "label": "Start Express Dev Server",
            "type": "shell",
            "command": "npm",
            "args": [
                "run",
                "start:express:dev"
            ],
            "group": {
                "kind": "build",
                "isDefault": true
            },
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "new"
            },
            "isBackground": true,
            "problemMatcher": {
                "pattern": {
                    "regexp": "^(.*):(\\d+):(\\d+):\\s+(warning|error):\\s+(.*)$",
                    "file": 1,
                    "line": 2,
                    "column": 3,
                    "severity": 4,
                    "message": 5
                },
                "background": {
                    "activeOnStart": true,
                    "beginsPattern": "^.*starting.*",
                    "endsPattern": "^.*started.*|.*listening.*"
                }
            }
        },
        {
            "label": "Build Express App",
            "type": "shell",
            "command": "npx",
            "args": [
                "tsc",
                "--project",
                "tsconfig.build.json"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            },
            "problemMatcher": "$tsc"
        },
        {
            "label": "Install Dependencies",
            "type": "shell",
            "command": "npm",
            "args": [
                "install"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Run Prisma Generate",
            "type": "shell",
            "command": "npm",
            "args": [
                "run",
                "prisma:generate"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Run Prisma Migrate",
            "type": "shell",
            "command": "npm",
            "args": [
                "run",
                "prisma:migrate"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        },
        {
            "label": "Kill Port 3000",
            "type": "shell",
            "command": "powershell",
            "args": [
                "-Command",
                "$port = Get-NetTCPConnection -LocalPort 3000 -ErrorAction SilentlyContinue; if ($port) { Stop-Process -Id $port.OwningProcess -Force; Write-Host 'Port 3000 freed' } else { Write-Host 'Port 3000 is already free' }"
            ],
            "group": "build",
            "presentation": {
                "echo": true,
                "reveal": "always",
                "focus": false,
                "panel": "shared"
            }
        }
    ]
}